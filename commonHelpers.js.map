{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Options for flatpickr date picker\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]); // Logging selected date to console\n  },\n};\n\n// DOM elements setup\nconst input = document.getElementById('datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst div = document.createElement('div');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\ndiv.classList.add('wrapper');\ndiv.appendChild(input);\ndiv.appendChild(button);\nconst parentEl = document.body;\nparentEl.appendChild(div);\nconst elSection = document.querySelector('section');\nelSection.insertAdjacentElement('afterend', div);\n\n// Importing and applying styles for flatpickr and iziToast\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst additionalOptions = {\n  dateFormat: 'Y-m-d H:i', // Date format (e.g., YYYY-MM-DD HH:mm)\n  minDate: new Date(),\n  // Minimum selectable date (current date)\n};\n\n// Initializing flatpickr on DOMContentLoaded\ndocument.addEventListener('DOMContentLoaded', function () {\n  flatpickr('#datetime-picker', { ...options, ...additionalOptions });\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  let userSelectedDate = null; // Variable to store user-selected date\n  let countdownInterval; // Variable to store countdown interval\n\n  // Initializing flatpickr with event handlers\n  const Picker = flatpickr('#datetime-picker', {\n    enableTime: true,\n    dateFormat: 'Y-m-d H:i', // Формат дати і часу: рік-місяць-день година:хвилина\n    defaultDate: new Date(), // Дата і час за замовчуванням: поточна дата і час\n    minuteIncrement: 1, // Інтервал вибору для хвилин: кожна хвилина\n\n    onClose(selectedDates) {\n      const selectedDate = selectedDates[0]; // Отримання першої обраної дати\n\n      const currentDate = new Date(); // Поточна дата і час\n      if (selectedDate < currentDate) {\n        // Перевірка, чи обрана дата менша за поточну\n        iziToast.error({\n          title: 'Error',\n          message: 'Please choose a date in the future',\n        });\n        button.disabled = true; // Вимкнення кнопки \"Start\", якщо обрана дата менша за поточну\n      } else {\n        userSelectedDate = selectedDate; // Збереження обраної користувачем дати\n\n        button.disabled = false; // Увімкнення кнопки \"Start\", якщо обрана дата коректна\n        button.style.background = '#3a18d575';\n        button.style.color = '#e25151';\n        input.style.background = '#16ee3d75';\n      }\n    },\n  });\n\n  button.addEventListener('click', function () {\n    button.setAttribute('disabled', true);\n    input.setAttribute('disabled', true);\n\n    const now = new Date().getTime();\n    let diff = userSelectedDate.getTime() - now;\n    iziToast.show({\n      title: 'Timer',\n      message: 'Countdown is started!',\n    });\n    // Update the timer every second\n    countdownInterval = setInterval(function () {\n      const { days, hours, minutes, seconds } = convertMs(diff);\n      daysElement.textContent = addLeadingZero(days);\n      hoursElement.textContent = addLeadingZero(hours);\n      minutesElement.textContent = addLeadingZero(minutes);\n      secondsElement.textContent = addLeadingZero(seconds);\n\n      if (diff <= 0) {\n        clearInterval(countdownInterval);\n        daysElement.textContent = '00';\n        hoursElement.textContent = '00';\n        minutesElement.textContent = '00';\n        secondsElement.textContent = '00';\n        iziToast.success({\n          title: 'Timer Finished',\n          message: 'Countdown timer has ended!',\n        });\n        button.removeAttribute('disabled');\n        input.removeAttribute('disabled');\n      }\n      diff -= 1000;\n    }, 1000);\n  });\n\n  // Function to convert milliseconds to days, hours, minutes, seconds\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % hour) / minute);\n    const seconds = Math.floor((ms % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  // Function to add leading zero if number is less than 10\n  function addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n  }\n});\n"],"names":["options","selectedDates","input","button","div","daysElement","hoursElement","minutesElement","secondsElement","parentEl","elSection","additionalOptions","flatpickr","userSelectedDate","countdownInterval","selectedDate","iziToast","now","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IACA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,EAGMC,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAM,SAAS,cAAc,KAAK,EAClCC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9DJ,EAAI,UAAU,IAAI,SAAS,EAC3BA,EAAI,YAAYF,CAAK,EACrBE,EAAI,YAAYD,CAAM,EACtB,MAAMM,EAAW,SAAS,KAC1BA,EAAS,YAAYL,CAAG,EACxB,MAAMM,EAAY,SAAS,cAAc,SAAS,EAClDA,EAAU,sBAAsB,WAAYN,CAAG,EAO/C,MAAMO,EAAoB,CACxB,WAAY,YACZ,QAAS,IAAI,IAEf,EAGA,SAAS,iBAAiB,mBAAoB,UAAY,CACxDC,EAAU,mBAAoB,CAAE,GAAGZ,EAAS,GAAGW,CAAmB,CAAA,CACpE,CAAC,EAED,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,IAAIE,EAAmB,KACnBC,EAGWF,EAAU,mBAAoB,CAC3C,WAAY,GACZ,WAAY,YACZ,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQX,EAAe,CACrB,MAAMc,EAAed,EAAc,CAAC,EAGhCc,EADgB,IAAI,MAGtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACnB,CAAS,EACDb,EAAO,SAAW,KAElBU,EAAmBE,EAEnBZ,EAAO,SAAW,GAClBA,EAAO,MAAM,WAAa,YAC1BA,EAAO,MAAM,MAAQ,UACrBD,EAAM,MAAM,WAAa,YAE5B,CACL,CAAG,EAEDC,EAAO,iBAAiB,QAAS,UAAY,CAC3CA,EAAO,aAAa,WAAY,EAAI,EACpCD,EAAM,aAAa,WAAY,EAAI,EAEnC,MAAMe,EAAM,IAAI,KAAM,EAAC,QAAO,EAC9B,IAAIC,EAAOL,EAAiB,QAAO,EAAKI,EACxCD,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,uBACf,CAAK,EAEDF,EAAoB,YAAY,UAAY,CAC1C,KAAM,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDb,EAAY,YAAcmB,EAAeL,CAAI,EAC7Cb,EAAa,YAAckB,EAAeJ,CAAK,EAC/Cb,EAAe,YAAciB,EAAeH,CAAO,EACnDb,EAAe,YAAcgB,EAAeF,CAAO,EAE/CJ,GAAQ,IACV,cAAcJ,CAAiB,EAC/BT,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAe,YAAc,KAC7BC,EAAe,YAAc,KAC7BQ,EAAS,QAAQ,CACf,MAAO,iBACP,QAAS,4BACnB,CAAS,EACDb,EAAO,gBAAgB,UAAU,EACjCD,EAAM,gBAAgB,UAAU,GAElCgB,GAAQ,GACT,EAAE,GAAI,CACX,CAAG,EAGD,SAASK,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAOI,EAAK,KAAQ,GAAM,EACzCH,EAAU,KAAK,MAAOG,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAGD,SAASE,EAAeE,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACnC,CACH,CAAC"}